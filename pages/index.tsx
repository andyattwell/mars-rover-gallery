import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import Filters from '../components/Filters'
import Slider from '../components/Slider'

import { FilterType } from '../components/Filters'
import React from 'react';

export default function Home() {
  const [filters, setFilter] = React.useState<FilterType>()
  const [page, setPage] = React.useState(1)
  const [pageLength, setPageLength] = React.useState(25)
  const [photos, setPhotos] = React.useState<any>([])
  const [selectedPhoto, setSelectedPhoto] = React.useState<any>(null)
  const [selectedPhotoIndex, setSelectedPhotoIndex] = React.useState<number|null>(null)
  const [loading, setLoading] = React.useState(false)

  async function filterHandler (params: FilterType) {
    setPage(1)
    setFilter(params)
    setPhotos([])
  }

  React.useEffect(() => {
    const fetchData = async () => {
      const data = await fetch('/api/photos', {
        method: 'POST',
        headers: {
          'Accept': 'application/json',
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({...filters, page})
      });
      const json = await data.json();
      setPhotos(json.photos || [])
      setLoading(false)
    }

    if (filters) {
      setLoading(true)
      const result = fetchData()
        .catch(console.error)
    }
  }, [filters, page])

  const NextButton = () => {
    if (photos.length >= pageLength) {
      return <li className="page-item"><a className="page-link" href="#" onClick={() => setPage(page + 1)}>Next</a></li>
    } else {
      return <></>
    }
  }

  const PrevButton = () => {
    if (page > 1) {
      return <li className="page-item"><a className="page-link" href="#" onClick={() => setPage(page - 1)}>Previous</a></li>
    } else {
      return <></>
    }
  }

  const Pagination = () => {
    return photos.length > 1 ?
      <nav className='mt-3'>
        <ul className="pagination">
          <PrevButton />
          <li className="page-item"><a className="page-link" href="#">{page}</a></li>
          <NextButton />
        </ul>
      </nav>
    : <></>
  }

  const Loader = () => {
    return loading ? <Image src={'/loading.gif'} alt="Loading..." width={20} height={20} className="mt-4"/> : <></>
}

  const PhotosList = () => {

    return filters?.rover ?
      <div className='card'>
        <div className="card-body text-start photoslist">
          <div className={styles.photoslist}>
            <div className="list-group mt-3 photos">
              {photos.map((photo: any, i: number) => (
                <a 
                  href="#photo-slider" 
                  className={'list-group-item list-group-item-action' + (selectedPhoto?.id === photo.id ? ' active' : '')}
                  key={i} 
                  onClick={() => { setSelectedPhoto(photo); setSelectedPhotoIndex(i) }}>
                  <strong>{photo.rover.name} - {photo.camera.name}</strong> <span>({photo.id})</span><br />
                  <small>Date: {photo.earth_date} - Sol: {photo.sol}</small>
                </a>
              ))}
            </div>
          </div>
          <div className='row'>
            <div className='col-8'>
              <Pagination />
            </div>
            <div className='col-4'>
              <Loader />
            </div>
          </div>
        </div>
      </div>
    
    : <></>
  }

  const handleClearFilters = () => {
    setPhotos([])
    setSelectedPhoto(null)
  }

  const changePhotoHandler = (index:number) => {
    if (index < 0 || index >= 25) {
      return false
    }
    const newPhoto = photos[index] 
    setSelectedPhoto(newPhoto)
    setSelectedPhotoIndex(index)
  }

  return (
    <div className='container'>
      <Head>
        <title>NASA Rovers Photo Gallery</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='row'>

        <div className="col-12">
          <Filters onSubmit={filterHandler} onClear={handleClearFilters}/>
        </div>
        <div className='col-12 col-md-4 col-xl-3 mt-2 text-center'>
          <PhotosList />
        </div>
          
        <div className="col-12 col-md-8 col-xl-9 text-center photo-container" id="photo-slider">
          <Slider photo={selectedPhoto} index={selectedPhotoIndex} onChangePhoto={changePhotoHandler}/>
        </div>
      </main>
    </div>
  )
}
